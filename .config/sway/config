# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show drun | xargs swaymsg exec --
# Screenshot tool
set $screenshot_tool ~/.config/sway/swaysctool.sh
# VPN tool
set $vpn_tool ~/.config/sway/warp-util.sh
# wallpaper and lockscreen background
set $wallpaper ~/.config/sway/wallpaper
set $lockbg ~/.config/sway/wallpaper_locked

### Output ###
# Wallpaper
output * bg $wallpaper fill
# Displays
output eDP-1 position 0,1080
output HDMI-A-1 position 0,0
# You can get the names of your outputs by running: swaymsg -t get_outputs

workspace 1 output eDP-1
workspace 2 output eDP-1
workspace 3 output eDP-1
workspace 4 output eDP-1
workspace 5 output eDP-1
workspace 6 output HDMI-A-1
workspace 7 output HDMI-A-1
workspace 8 output HDMI-A-1
workspace 9 output HDMI-A-1
workspace 10 output HDMI-A-1

smart_borders on

### Input ###
# Keyboard
input * {
    xkb_layout "us,ua,ru"
    xkb_variant ","
}
input type:keyboard xkb_capslock disabled
input type:keyboard xkb_numlock enabled
# Touchpad
input "1267:12447:ELAN1200:00_04F3:309F_Touchpad" {
    #dwt enabled
    pointer_accel 0.4
    tap enabled
    natural_scroll enabled
    #middle_emulation enabled
}

### Key bindings ###
# Start a terminal
bindsym $mod+Return exec $term
# Kill focused window
bindsym --to-code $mod+Shift+q kill
# Start launcher
bindsym --to-code $mod+d exec $menu
# Drag & resize windows
floating_modifier $mod normal
# Reload the configuration file
bindsym --to-code $mod+Shift+c reload
# Exit sway (logs you out of your Wayland session)
bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
# Change focus up|down|left|right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# Move container up|down|left|right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# $mod+b or $mod+v, for horizontal and vertical splits
bindsym --to-code $mod+b splith
bindsym --to-code $mod+v splitv
# Switch the current container between different layout styles
bindsym --to-code $mod+s layout stacking
bindsym --to-code $mod+w layout tabbed
bindsym --to-code $mod+e layout toggle split
# Make the current focus fullscreen
bindsym --to-code $mod+f fullscreen
# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle
# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle
# Move focus to the parent container
bindsym --to-code $mod+a focus parent
# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the next scratchpad window or hide the focused scratchpad window.
bindsym $mod+minus scratchpad show
# Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym --to-code $mod+r mode "resize"
# Volume up|down|mute
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && ([ "$(pactl get-sink-mute @DEFAULT_SINK@)" = "Mute: yes" ] && echo 0 > $WOBSOCK) || (pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}') > $WOBSOCK
# Microphone up|down|mute
bindsym --locked Shift+XF86AudioRaiseVolume exec pactl set-source-volume @DEFAULT_SOURCE@ +5% && pactl get-source-volume @DEFAULT_SOURCE@ | head -n 1 | awk '{print substr($5, 1, length($5)-1) " mic"}' > $WOBSOCK
bindsym --locked Shift+XF86AudioLowerVolume exec pactl set-source-volume @DEFAULT_SOURCE@ -5% && pactl get-source-volume @DEFAULT_SOURCE@ | head -n 1 | awk '{print substr($5, 1, length($5)-1) " mic"}' > $WOBSOCK
bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
# Display backlight up|down
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+ | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
# Audio player play|next|prev
bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym --locked XF86AudioNext exec playerctl next
bindsym --locked XF86AudioPrev exec playerctl previous
# Open menu
bindsym XF86Search exec $menu
# Lock the screen
bindsym --to-code $mod+l exec swaylock -f -i $lockbg
# Screenshot of wlole screen to file
bindsym Print exec $screenshot_tool screen file
# Screenshot of selected area to file
bindsym Shift+Print exec $screenshot_tool area file
# Screenshot of selected window to file
bindsym Alt+Print exec $screenshot_tool window file
# Screenshot of whole screen to clipboard
bindsym Control+Print exec $screenshot_tool screen buffer
# Screenshot of selected area to clipboard
bindsym Control+Shift+Print exec $screenshot_tool area buffer
# Screenshot of selected window to clipboard
bindsym Control+Alt+Print exec $screenshot_tool window buffer
# Set english keyboard layout
bindsym --locked Control+1 exec swaymsg input type:keyboard xkb_switch_layout 0
# Set ukrainian keyboard layout
bindsym --locked Control+2 exec swaymsg input type:keyboard xkb_switch_layout 1
# Set rus keyboard layout
bindsym --locked Control+3 exec swaymsg input type:keyboard xkb_switch_layout 2

# Open calculator
bindsym XF86Calculator exec foot -T bc bc -l
# Open file manager
bindsym $mod+Shift+Return exec doublecmd
# Toggle touchpad
bindsym XF86TouchpadToggle input type:touchpad events toggle enabled disabled
# Toggle VPN
bindsym --to-code $mod+o exec $vpn_tool switch
# Toggle sticky window (always on top)
bindsym --to-code $mod+z sticky toggle
bindsym --to-code $mod+i sticky enable
bindsym --to-code $mod+k sticky disable
#key with ASUS logo: bindsym XF86Launch1 exec $menu
#webcam key bindsym: XF86WebCam exec $menu

### Gestures ###
# Move to workspace by 3-fingers swipe
bindgesture swipe:3:right workspace prev
bindgesture swipe:3:left workspace next

# default colors for statusbar
set $c_st_text #ffffff
set $c_st_bg #000000
set $c_st_fw_bg #000000
set $c_st_fw_text #ffffff
set $c_st_fw_border #ffffff
set $c_st_iw_bg #000000
set $c_st_iw_text #999999
set $c_st_iw_border #000000

# Window border
#client.<class> <border> <background> <text> <indicator> <child_border> 
client.focused #ffffff #000000 #ffffff
client.focused_inactive #eeeeee #111111 #eeeeee
client.unfocused #999999 #111111 #999999

# you may 'include swaycolors' to override default colors above

# Status Bar:
bar {
    position top
    status_command while date +[$(if [[ $(cat /sys/class/power_supply/AC0/online) == "1" ]]; then echo 'AC'; else echo 'BAT'; fi)][$(cat /sys/class/power_supply/BAT0/capacity)%]'[%d.%m.%Y %H:%M:%S]'; do sleep 1; done
    colors {
        statusline $c_st_text
        background $c_st_bg
        focused_workspace $c_st_fw_border $c_st_fw_bg $c_st_fw_text
        inactive_workspace $c_st_iw_border $c_st_iw_bg $c_st_iw_text
    }
    mode hide
    modifier $mod
}

# wob
set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

# battery level monitor
exec ~/.config/sway/powermon.sh

# Idle actions
exec swayidle -w \
    timeout 10 '~/.config/sway/is_locked.sh && ~/.config/sway/lightscontrol.sh 0' \
    resume '~/.config/sway/is_locked.sh && ~/.config/sway/lightscontrol.sh 1' \
    timeout 300 '(~/.config/sway/is_locked.sh || chayang) && ~/.config/sway/lightscontrol.sh 0 && swaylock -f -i $lockbg' \
    resume '~/.config/sway/lightscontrol.sh 1' \
    timeout 320 '[[ $(cat /sys/class/power_supply/AC0/online) -eq 0 ]] && systemctl suspend' \
    before-sleep 'swaylock -f -i $lockbg && playerctl pause'

# xdg autostart
exec dex -ae Swa

# Enables inhibit_idle when playing audio
exec sway-audio-idle-inhibit

# Windows config
for_window [app_id="veracrypt"] floating enable
for_window [app_id="firefox"] border none
for_window [app_id="floorp"] border none
for_window [app_id="firefox" title="Picture-in-Picture"] floating enable, sticky enable
for_window [app_id="floorp" title="Picture-in-Picture"] floating enable, sticky enable
for_window [title="Welcome to Android Studio"] floating enable
for_window [title="Welcome to IntelliJ IDEA"] floating enable
for_window [title="Welcome to PyCharm"] floating enable
for_window [title="Welcome to JetBrains Rider"] floating enable
for_window [title="Welcome to CLion"] floating enable
for_window [title="TelegramDesktop"] floating enable, move position cursor
for_window [title="bc"] floating enable
for_window [title="Telegram"] border none


# sway does not set DISPLAY/WAYLAND_DISPLAY in the systemd user environment
# See FS#63021
# Adapted from xorg's 50-systemd-user.sh, which achieves a similar goal.

exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP
include /etc/sway/config.d/*
